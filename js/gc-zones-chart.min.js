"use strict";const gcZoneschartLocales={en:{options:{title:"Zones chart"},description:{id:"ID",parcel:"Parcel",sdate:"Sensing date"},legend:{uncultivated_area:"uncultivated area",area_under_crops:"area under crops",fraction_under_crops:"fraction under crops"}},de:{options:{title:"Zonen Graph"},description:{id:"Nr",parcel:"Feld",sdate:"Aufnahmedatum"},legend:{uncultivated_area:"unbewirtschaftete Fläche",area_under_crops:"bewirtschaftete Fläche",fraction_under_crops:"Anteil bewirtschafteter Fläche"}}};Vue.component("gc-zones-chart",{props:{gcWidgetId:{type:String,default:"zones-chart1",required:!0},gcZonesData:{type:Object,default:{}},gcMode:{type:String,default:"pie"},gcAvailableOptions:{type:String,default:"title,legend"},gcWidgetCollapsed:{type:Boolean,default:!0},gcLanguage:{type:String,default:"en"},gcLegendPosition:{type:String,default:"bottom"},gcWhiteLabel:{type:Boolean,default:!1}},template:'<div :id="gcWidgetId" class="gc-zones-chart">       \n\n              <p class="gc-options-title is-size-6 is-orange" style="cursor: pointer;" \n                v-on:click="toggleZoneschart"   \n                v-show="this.availableOptions.includes(\'title\')">\n                {{ $t(\'options.title\') }}\n                <i :class="[gcWidgetCollapsed ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n              </p>\n              <div :class="[gcWidgetCollapsed ? \'\': \'is-hidden\']">\n               <div class="is-flex">\n                <div class="is-grey" v-show="this.availableOptions.includes(\'description\')">\n                </div>\n\n                </div>\n                \x3c!-- watermark --\x3e\n                <div :class="[this.gcWhiteLabel ? \'is-hidden\': \'is-inline-block\', \'is-pulled-right\']"\n                  style="opacity: 0.65;">\n                  <span style="vertical-align: top; font-size: 0.7rem;">powered by</span><br>\n                  <img src="img/logo.png" alt="geo|cledian" style="width: 100px; margin: -10px 0;">\n                </div>\n               </div>\n\n                <div :id="\'chartNotice_\'+gcWidgetId" class="content is-hidden"></div>\n\n                <div :id="\'chartSpinner_\'+gcWidgetId" class="chartSpinner zones-chart-spinner is-hidden"  style="max-height: 50px!important;">\n                  <div class="rect1"></div>\n                  <div class="rect2"></div>\n                  <div class="rect3"></div>\n                  <div class="rect4"></div>\n                  <div class="rect5"></div>\n                </div>\n\n                <div style="position: relative; padding-top: 4em;">\n                  <div :id="\'chart_\'+gcWidgetId" :class="[\'gc-zones-chart-chart-\'+this.gcMode]">\n                  </div>\n                  <div :id="\'chartlegend_\'+gcWidgetId"></div>\n                </div>\n              </div>\n          </div>\n          \x3c!-- chart --\x3e',data:function(){return{chart:void 0}},computed:{availableOptions:{get:function(){return this.gcAvailableOptions.split(",")}},currentLanguage:{get:function(){return this.gcLanguage}}},i18n:{locale:this.currentLanguage,messages:gcZoneschartLocales},created:function(){console.debug("zones-chart! - created()");try{this.changeLanguage()}catch(ex){console.error(ex)}},mounted:function(){this.$root.$on("containerSizeChange",this.containerSizeChange),this.chart=bb.generate({bindto:"#chart_"+this.gcWidgetId,data:{columns:[],type:this.gcMode},legend:{position:this.gcLegendPosition}}),this.gcParcelId>0&&(this.currentParcelID=this.gcParcelId,this.handleCurrentParcelIDchange())},watch:{gcZonesData(newValue,oldValue){this.createChartData()},currentLanguage(newValue,oldValue){this.changeLanguage(),this.createChartData()},gcMode(newValue,oldValue){"gauge"===newValue&&(this.gcLegendPosition="bottom"),this.createChartData()},gcLegendPosition(newValue,oldValue){"inset"===newValue&&"gauge"===this.gcMode&&(this.gcLegendPosition="bottom"),this.createChartData()}},methods:{toggleZoneschart:function(){this.gcWidgetCollapsed=!this.gcWidgetCollapsed},createChartData:function(){console.debug("createChartData()");let columns=[];if(this.gcZonesData){if("pie"==this.gcMode||"donut"==this.gcMode){try{columns[0]=["zone_1"].concat(this.formatDecimal(this.gcZonesData.zone_1.area,2))}catch(ex){}try{columns[1]=["zone_2"].concat(this.formatDecimal(this.gcZonesData.zone_2.area,2))}catch(ex){}try{columns[2]=["zone_3"].concat(this.formatDecimal(this.gcZonesData.zone_3.area,2))}catch(ex){}try{columns[3]=["zone_4"].concat(this.formatDecimal(this.gcZonesData.zone_4.area,2))}catch(ex){}try{columns[4]=["zone_5"].concat(this.formatDecimal(this.gcZonesData.zone_5.area,2))}catch(ex){}}document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chart_"+this.gcWidgetId).classList.remove("is-hidden"),document.getElementById("chartNotice_"+this.gcWidgetId).classList.add("is-hidden"),this.createChart(columns)}},createChart:function(data){let color_options={},pie_options={},pie_color_options={};"pie"!=this.gcMode&&"donut"!=this.gcMode||(pie_options={label:{format:function(value,ratio,id){return this.formatDecimal(value,1)+" ha"}.bind(this)},expand:!0},pie_color_options={zone_1:"#d7191c",zone_2:"#fdae61",zone_3:"#ffffc0",zone_4:"#a6d96a",zone_5:"#1a9641"}),this.chart=bb.generate({bindto:"#chart_"+this.gcWidgetId,data:{columns:[],type:this.gcMode,colors:pie_color_options,names:{zone_1:"zone 1 (> 25% below mean)",zone_2:"zone 2 (5% to 25% below mean)",zone_3:"zone 3 (-5% / +5% mean)",zone_4:"zone 4 (5% to 25% above mean)",zone_5:"zone 5 (> 25% above mean)"},labels:{colors:{zone_1:"#eee",zone_2:"#4a4a4a",zone_3:"#4a4a4a",zone_4:"#4a4a4a",zone_5:"#eee"}}},pie:pie_options,color:color_options,transition:{duration:500},legend:{position:this.gcLegendPosition}}),this.chart.load({columns:data,done:function(){setTimeout(function(){this.chart.resize()}.bind(this),100)}.bind(this)})},containerSizeChange(size){console.debug("containerSizeChange - gc-zones-chart"),this.chart.resize()},changeLanguage(){this.$i18n.locale=this.currentLanguage},removeFromArray:function(arry,value){let index=arry.indexOf(value);return index>-1&&arry.splice(index,1),arry},formatDecimal:function(decimal,numberOfDecimals){var factor=100;return isNaN(parseFloat(decimal))?NaN:(1==numberOfDecimals&&(factor=10),2==numberOfDecimals&&(factor=100),3==numberOfDecimals&&(factor=1e3),4==numberOfDecimals&&(factor=1e4),5==numberOfDecimals&&(factor=1e5),Math.ceil(decimal*factor)/factor)},capitalize:function(s){return"string"!=typeof s?"":s.charAt(0).toUpperCase()+s.slice(1)},isDateValid:function(date_str){return!isNaN(new Date(date_str))},loadJSscript:function(url,callback){let script=document.createElement("script");script.src=gcGetBaseURL()+"/"+url,script.async=!0,console.debug(script.src),document.body.appendChild(script),script.onload=function(){callback()}},showMsg:function(msg){try{document.getElementById("sDate_"+this.gcWidgetId).classList.add("is-hidden")}catch(ex){}try{document.getElementById("desc_"+this.gcWidgetId).classList.add("is-hidden")}catch(ex){}document.getElementById("chartNotice_"+this.gcWidgetId).innerHTML="key is not authorized"===msg?"Sorry, the given API key is not authorized!<br> Please contact <a href='https://www.geocledian.com'>geo|cledian</a> for a valid API key.":"api key validity expired"===msg?"Sorry, the given API key's validity expired!<br> Please contact <a href='https://www.geocledian.com'>geo|cledian</a>for a valid API key.":"Sorry, an error occurred!<br>Please check the console log for more information.",document.getElementById("chartNotice_"+this.gcWidgetId).classList.remove("is-hidden"),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden")},hideMsg:function(msg){try{document.getElementById("sDate_"+this.gcWidgetId).classList.remove("is-hidden")}catch(ex){}try{document.getElementById("desc_"+this.gcWidgetId).classList.remove("is-hidden")}catch(ex){}document.getElementById("chartNotice_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chart_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.remove("is-hidden")}}});